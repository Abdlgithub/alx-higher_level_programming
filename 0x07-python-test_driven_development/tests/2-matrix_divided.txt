The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an test text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [[1, 2, 4], [12, 63, 2]]

Now use it:

    >>> matrix_divided(matrix, 1)
    [[1.0, 2.0, 4.0], [12.0, 63.0, 2.0]]

    >>> matrix_divided(matrix, .86)
    [[1.16, 2.33, 4.65], [13.95, 73.26, 2.33]]

    >>> matrix_divided(matrix, -1.5)
    [[-0.67, -1.33, -2.67], [-8.0, -42.0, -1.33]]

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided(matrix, [])
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(matrix, {})
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(matrix, "89")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(matrix, num)
    Traceback (most recent call last):
    NameError: name 'num' is not defined

    matrix:

        >>> matrix_divided([[3, 3, 27], [3, 3]], 6)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

        >>> matrix_divided([[3, 3, 27], "string", [34, 67, 5]], 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[3, 3, 27], ["34", 67, 5]], 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[3, 3, 27], (2, 3, 4)], 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([3, 3, 27], 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([3, 3, 27], 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided(((36, 54, 4), (54, 57, 5)), 6)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[], []], 6)
        [[], []]

        >>> matrix_divided([[]], 6)
        [[]]

        >>> matrix_divided([[4, 56, 100], [45,5, 55]], float('inf'))
        [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

        >>> matrix_divided([[4, 56, 100], [45,5, 55]], int('inf'))
        Traceback (most recent call last):
        ValueError: invalid literal for int() with base 10: 'inf'

        >>> matrix_divided([[4, 56, 100], [45,5, 55]], float('NaN'))
        [[nan, nan, nan], [nan, nan, nan]]
